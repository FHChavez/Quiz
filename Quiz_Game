import tkinter as tk
from tkinter import messagebox, ttk


#Nested Dictionary and List to contain Question, Choices, and Answers
quiz_info = [
    {   "question": "What can be found in Isothermals Lake?",
        "choices": ["Whales", "Ducks", "Alligators", "Penguins", "Otters"],
        "answer": "Ducks"
    },
    {   "question": "Which of these numbers is PI?",
        "choices": ["3.14", "4.31", "3.00", "4.44", "2.22"],
        "answer": "3.14"
    },
    {   "question": "Who is Batman's partner?",
        "choices": ["The Beaver", "Owl", "Wolf Kid", "Robin", "Iron Kid"],
        "answer": "Robin"
    },
    {   "question": "Which of these was one of the first 13 colonies?",
        "choices": ["North Carolina", "Texas", "Florida", "Hawaii", "Alaska"],
        "answer": "North Carolina"
    },
    {   "question": "Which Class is this project for?",
        "choices": ["C", "C++", "Visual Basic", "Java", "Python"],
        "answer": "Python"
    },
    {   "question": "What is Iron Man's real name?",
        "choices": ["Roy", "Tony", "Leon", "Jim", "Theo"],
        "answer": "Tony"
    },
    {   "question": "Who is the mascot of Pokemon?",
        "choices": ["Quagsire", "Beedrill", "Voltob", "Pikachu", "Charizard"],
        "answer": "Pikachu"
    }
    # Add more questions here
]


# Function to display the current question and choices
def show_question():
    # Get the current question from the quiz_info list
    question = quiz_info[current_question]
    qs_label.config(text=question["question"])

    # Display the different choices on the buttons
    choices = question["choices"]
    for i in range(5): # This sets the display to have 5 different choices a user can pick
        choice_btns[i].config(text=choices[i], state="normal") # Will reset button state

    # Clear the feedback label and disable the next button
    feedback_label.config(text="")
    next_btn.config(state="disabled")

# Function to check the selected answer and provide feedback
def check_answer(choice):
    # Get the current question from the quiz_info list
    question = quiz_info[current_question]
    selected_choice = choice_btns[choice].cget("text")

    # Check if the selected choice matches the correct answer
    if selected_choice == question["answer"]:
        # Update the score and display it
        global score
        score += 1 # If the choice was correct 1 is added and displayed to the total score
        score_label.config(text="Score: {}/{}".format(score, len(quiz_info)))
        feedback_label.config(text="You are Correct!", foreground="green")
    else:
        feedback_label.config(text="You are sadly Incorrect!", foreground="red")
    
    # Disable all choice buttons and enable the next button
    for button in choice_btns:
        button.config(state="disabled")
    next_btn.config(state="normal")

# Function to move to the next question
def next_question():
    global current_question
    current_question +=1 # It adds 1 to move on to the next question

    if current_question < len(quiz_info):
        # If there are more questions, show the next question
        show_question()
    else:
        # If all questions have been answered, display the final score and end the quiz
        messagebox.showinfo("Quiz Completed",
                            "Quiz Completed! Final score: {}/{}".format(score, len(quiz_info)))
        root.destroy()

# Create the main window
root = tk.Tk()
root.title("Quiz App") # This sets the title of the Window
root.geometry("400x400") # This sets the size of the Window
root.config(bg="#5F0F40") # This sets the color of the Window


# Create the question label and how it will be set
qs_label = ttk.Label(
    root,
    anchor="center",
    wraplength=500,
    padding=10
)
qs_label.pack(pady=10)

# Create the choice buttons
choice_btns = []
for i in range(5): # This decides that 5 buttons will show up for each choice
    button = ttk.Button(
        root,
        command=lambda i=i: check_answer(i)
    )
    button.pack(pady=5)
    choice_btns.append(button)

# Create the feedback label
feedback_label = ttk.Label(
    root,
    anchor="center",
    padding=10
)
feedback_label.pack(pady=10)

# Initialize the score so it is zero at the start 
score = 0

# Create the score label
score_label = ttk.Label(
    root,
    text="Score: 0/{}".format(len(quiz_info)),
    anchor="center",
    padding=10
)
score_label.pack(pady=10)

# Create the next button
next_btn = ttk.Button(
    root,
    text="Next",
    command=next_question,
    state="disabled" # This is the button for the state that will prevent a user from moving on without answering the question that is displayed
)
next_btn.pack(pady=10)

# Initialize the current question index
current_question = 0

# Show the first question
show_question()

# Start the main event loop
root.mainloop()
